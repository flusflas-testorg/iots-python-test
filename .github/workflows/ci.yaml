name: CI

on:
  push:
    branches:
      - '*/*'
  pull_request:
    branches:
      - master

jobs:
  unit-test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.in-project true

      - name: Cache the virtualenv
        uses: actions/cache@v2
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install

      - name: Run tests
        run: |
          poetry run pytest -v

#      - name: Test
#        run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...
#
#      - name: Upload coverage to Codecov
#        if: ${{ matrix.go == 'latest' }}
#        uses: codecov/codecov-action@v3

#  lint:
#    name: Lint
#    runs-on: ubuntu-latest
#    steps:
#      - name: Set up Go
#        uses: actions/setup-go@v3
#        with:
#          go-version: 1.x
#          check-latest: true
#
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Lint
#        uses: golangci/golangci-lint-action@v3
#        with:
#          version: latest